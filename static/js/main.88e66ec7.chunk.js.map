{"version":3,"sources":["api/_DATA.js","api/index.js","actions/authedUser.js","actions/users.js","components/LoginDialog.js","actions/questions.js","components/NewQuestion.js","components/PageNotFound.js","components/Question.js","components/Questions.js","components/Leaderboard.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/questions.js","reducers/users.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","_saveQuestionAnswer","qid","answer","getUsers","a","async","getQuestions","saveQuestion","saveQuestionAnswer","setAuthedUser","user","type","usersReceived","connect","show","useState","selectedUser","setSelectedUser","useEffect","fetchData","Modal","onHide","Header","Title","Body","className","Spinner","animation","ListGroup","Object","keys","map","userId","Item","key","eventKey","active","onClick","Figure","Image","width","height","src","roundedCircle","thumbnail","Button","disabled","questionsReceived","addQuestion","lastOption1","lastOption2","setLastOptions","option1","setOption1","option2","setOption2","displayToast","setDisplayToast","timeToRedirect","setTimeToRedirect","timerToken","clearTimeout","setOption","e","setOptionState","preventDefault","target","value","to","Container","Row","Col","xs","Card","Form","Group","Text","Control","placeholder","onChange","trim","length","questionToBeSaved","questionSaved","sendQuestion","Toast","style","position","top","left","transform","onClose","message","answerQuestion","authedUserId","questionId","showTotalVotes","history","useHistory","myAnswer","answered","totalVotes","formatVotes","nVotes","sendAnswerQuestion","selectedAnswer","variant","size","push","sm","round","Badge","questionsArray","sort","question1","question2","filterQuestions","includes","unanswerQuestions","filter","answeredQuestions","Tabs","defaultActiveKey","Tab","title","UserProfile","usersArray","user1","user2","location","useLocation","Navbar","bg","expand","collapseOnSelect","Toggle","aria-controls","Collapse","Nav","activeKey","pathname","Link","exact","path","component","Questions","render","match","params","showVotes","disableVoteAction","showAuthor","NewQuestion","Leaderboard","PageNotFound","combineReducers","state","JSON","parse","localStorage","getItem","action","setItem","stringify","removeItem","store","createStore","rootReducer","applyMiddleware","thunk","next","console","group","log","result","getState","groupEnd","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.88e66ec7.chunk.js","sourcesContent":["let users = {\n    sarahedo: {\n      id: 'sarahedo',\n      name: 'Sarah Edo',\n      avatarURL: 'https://pbs.twimg.com/profile_images/2958377871/1badc51c9ffa183c28ecefec1bc8a1a5_400x400.jpeg',\n      answers: {\n        \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\n        \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n        \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n      },\n      questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n      id: 'tylermcginnis',\n      name: 'Tyler McGinnis',\n      avatarURL: 'https://pbs.twimg.com/profile_images/1138547910524588034/4R6jdBch_400x400.png',\n      answers: {\n        \"vthrdm985a262al8qx3do\": 'optionOne',\n        \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n      },\n      questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n      id: 'johndoe',\n      name: 'John Doe',\n      avatarURL: 'https://pbs.twimg.com/profile_images/582222032739266561/GVZk2caU_400x400.jpg',\n      answers: {\n        \"xj352vofupe1dqz9emx13r\": 'optionOne',\n        \"vthrdm985a262al8qx3do\": 'optionTwo',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\n      },\n      questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n  }\n  \n  let questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n      id: '8xf0y6ziyjabvozdd253nd',\n      author: 'sarahedo',\n      timestamp: 1467166872634,\n      optionOne: {\n        votes: ['sarahedo'],\n        text: 'have horrible short term memory',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'have horrible long term memory'\n      }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n      id: '6ni6ok3ym7mf1p33lnez',\n      author: 'johndoe',\n      timestamp: 1468479767190,\n      optionOne: {\n        votes: ['johndoe', 'sarahedo'],\n        text: 'become a superhero',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'become a supervillian'\n      }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n      id: 'am8ehyc8byjqgar0jgpub9',\n      author: 'sarahedo',\n      timestamp: 1488579767190,\n      optionOne: {\n        votes: [],\n        text: 'be telekinetic',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be telepathic'\n      }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n      id: 'loxhs1bqm25b708cmbf3g',\n      author: 'tylermcginnis',\n      timestamp: 1482579767190,\n      optionOne: {\n        votes: [],\n        text: 'be a front-end developer',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be a back-end developer'\n      }\n    },\n    \"vthrdm985a262al8qx3do\": {\n      id: 'vthrdm985a262al8qx3do',\n      author: 'tylermcginnis',\n      timestamp: 1489579767190,\n      optionOne: {\n        votes: ['tylermcginnis'],\n        text: 'find $50 yourself',\n      },\n      optionTwo: {\n        votes: ['johndoe'],\n        text: 'have your best friend find $500'\n      }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n      id: 'xj352vofupe1dqz9emx13r',\n      author: 'johndoe',\n      timestamp: 1493579767190,\n      optionOne: {\n        votes: ['johndoe'],\n        text: 'write JavaScript',\n      },\n      optionTwo: {\n        votes: ['tylermcginnis'],\n        text: 'write Swift'\n      }\n    },\n  }\n  \n  function generateUID () {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n  }\n  \n  export function _getUsers () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...users}), 1000)\n    })\n  }\n  \n  export function _getQuestions () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...questions}), 1000)\n    })\n  }\n  \n  function formatQuestion ({ optionOneText, optionTwoText, author }) {\n    return {\n      id: generateUID(),\n      timestamp: Date.now(),\n      author,\n      optionOne: {\n        votes: [],\n        text: optionOneText,\n      },\n      optionTwo: {\n        votes: [],\n        text: optionTwoText,\n      }\n    }\n  }\n  \n  export function _saveQuestion (question) {\n    return new Promise((res, rej) => {\n      const authedUser = question.author;\n      const formattedQuestion = formatQuestion(question)\n  \n      setTimeout(() => {\n        questions = {\n          ...questions,\n          [formattedQuestion.id]: formattedQuestion\n        }\n        \n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            questions: users[authedUser].questions.concat([formattedQuestion.id])\n          }\n        }\n  \n        res(formattedQuestion)\n      }, 1000)\n    })\n  }\n  \n  export function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            answers: {\n              ...users[authedUser].answers,\n              [qid]: answer\n            }\n          }\n        }\n  \n        questions = {\n          ...questions,\n          [qid]: {\n            ...questions[qid],\n            [answer]: {\n              ...questions[qid][answer],\n              votes: questions[qid][answer].votes.concat([authedUser])\n            }\n          }\n        }\n  \n        res()\n      }, 500)\n    })\n  }\n  \n  ","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA'\n\nexport async function getUsers() {\n    return await _getUsers()\n}\n\nexport async function getQuestions() {\n    return await _getQuestions()\n}\n\nexport async function saveQuestion(question) {\n    return await _saveQuestion(question)\n}\n\nexport async function saveQuestionAnswer(answer) {\n    return await _saveQuestionAnswer(answer)\n}\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport function setAuthedUser(user) {\n    return {\n        type: SET_AUTHED_USER,\n        user\n    }\n}\n","export const USERS_RECEIVED = 'USERS_RECEIVED'\n\nexport function usersReceived(users) {\n    return {\n        type: USERS_RECEIVED,\n        users\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Modal, Button, Spinner, ListGroup, Figure } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getUsers } from '../api'\nimport { setAuthedUser } from '../actions/authedUser'\nimport { usersReceived } from '../actions/users'\n\nconst mapStateToProps = ({ authedUser, users }) => {\n    return {\n        authedUser,\n        users,\n    }\n}\n\nfunction LoginDialog({ authedUser, setAuthedUser, users, usersReceived }) {\n    \n    const show = authedUser === null\n    const [selectedUser, setSelectedUser] = useState(null)\n\n    useEffect(() => {\n        async function fetchData() {\n            const users = await getUsers()\n            usersReceived(users)\n        }\n        if (!users) {\n            fetchData()\n        }\n    })\n\n    return (\n        <Modal show={show} onHide={() => {}}>\n            <Modal.Header>\n                <Modal.Title>Select a user to login</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {!users && (\n                    <div className=\"text-center mb-1\">\n                        <Spinner animation=\"border\"/>\n                    </div>\n                )}\n                {users && (\n                    <ListGroup className=\"mb-3 w-100\">\n                        {Object.keys(users).map(userId => users[userId]).map(user => (\n                            <ListGroup.Item key={user.id} eventKey={user.id} active={selectedUser && selectedUser.id === user.id} onClick={() => setSelectedUser(user)}>\n                                <Figure.Image width={50} height={50} src={user.avatarURL} roundedCircle thumbnail className=\"mr-2\"/>\n                                {`${user.name} (${user.id})`}\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n                <Button className=\"w-100\" onClick={() => setAuthedUser(selectedUser)} disabled={selectedUser === null}>Login</Button>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default connect(mapStateToProps, { setAuthedUser, usersReceived })(LoginDialog)","export const ADD_QUESTION = 'ADD_QUESTION'\nexport const QUESTIONS_RECEIVED = 'QUESTIONS_RECEIVED'\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\n\nexport function questionsReceived(questions) {\n    return {\n        type: QUESTIONS_RECEIVED,\n        questions\n    }\n}\n\nexport function addQuestion(question) {\n    return {\n        type: ADD_QUESTION,\n        question\n    }\n}\n\nexport function answerQuestion({ qid, answer, authedUserId }) {\n    return {\n        type: ANSWER_QUESTION,\n        qid,\n        answer,\n        authedUserId,\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Container, Row, Col, Card, Button, Form, Toast } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { saveQuestion } from '../api'\nimport { addQuestion } from '../actions/questions'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nfunction NewQuestion({ authedUser, addQuestion }) {\n    const [{lastOption1, lastOption2}, setLastOptions] = useState({})\n    const [option1, setOption1] = useState(\"\")\n    const [option2, setOption2] = useState(\"\")\n    const [displayToast, setDisplayToast] = useState(false)\n    const [timeToRedirect, setTimeToRedirect] = useState(false)\n    let timerToken = null;\n    const sendQuestion = async () => {\n        const questionToBeSaved = {\n            optionOneText: option1.trim(),\n            optionTwoText: option2.trim(),\n            author: authedUser.id\n        }\n        setOption1(\"\")\n        setOption2(\"\")\n        const questionSaved = await saveQuestion(questionToBeSaved)\n        addQuestion(questionSaved)\n        setLastOptions({\n            lastOption1: questionSaved.optionOne.text,\n            lastOption2: questionSaved.optionTwo.text,\n        })\n        setDisplayToast(true)\n        timerToken = setTimeout(() => {\n            setDisplayToast(false)\n            setTimeToRedirect(true)\n        }, 1500)\n    }\n\n    useEffect(() => clearTimeout(timerToken))\n\n    const setOption = (e, setOptionState) => {\n        e.preventDefault()\n        setOptionState(e.target.value)\n    }\n\n    if (timeToRedirect) {\n        return <Redirect to='/questions'/>\n    }\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                    </Col>\n                    <Col xs={10}>\n                        <Card className=\"text-center\">\n                            <Card.Header>\n                                <Card.Title>Create New Question</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Text>Would you rather...</Form.Text>\n                                        <Form.Control type=\"text\" placeholder=\"Type 1st option here\" value={option1} onChange={(e) => setOption(e, setOption1)}/>\n                                        <Form.Text>OR</Form.Text>\n                                        <Form.Control type=\"text\" placeholder=\"Type 2nd option here\" value={option2} onChange={(e) => setOption(e, setOption2)}/>\n                                    </Form.Group>\n                                    <Button disabled={option1.trim().length === 0 || option2.trim().length === 0} onClick={() => sendQuestion()} className=\"w-100\">Submit</Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                    </Col>\n                </Row>\n            </Container>\n            <Toast show={displayToast} style={{\n                position: 'absolute',\n                top: 0,\n                left: '50%',\n                transform: 'translateX(-50%)'\n            }} onClose={() => setDisplayToast(false)}>\n                <Toast.Header>\n                    <strong className=\"mr-auto\">Would you rather...</strong>\n                    <small className=\"ml-4\">just added</small>\n                </Toast.Header>\n                <Toast.Body className=\"text-center\">\n                    <p>{lastOption1}</p>\n                    <p>OR</p>\n                    <p>{lastOption2}</p>\n                </Toast.Body>\n            </Toast>\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, { addQuestion })(NewQuestion)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nfunction PageNotFound({ authedUser, message }) {\n    if (authedUser) {\n        return (\n            <div className=\"text-center\" style={{\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%)'\n            }}>\n                <h1>404</h1>\n                <h1>{message || 'Page not found'}</h1>\n            </div>\n        )\n    } else {\n        return <div></div>\n    }\n}\n\nexport default connect(mapStateToProps)(PageNotFound)\n","import React, { useEffect } from 'react'\nimport { Card, Button, Badge, Container, Row, Col, Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { saveQuestionAnswer, getQuestions } from '../api'\nimport { answerQuestion, questionsReceived } from '../actions/questions'\nimport PageNotFound from './PageNotFound'\nimport { useHistory } from 'react-router-dom'\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n    return {\n        authedUser,\n        questions,\n    }\n}\n\nfunction Question({ questions, questionsReceived, questionId, question, authedUser, answerQuestion, showTotalVotes }) {\n    const history = useHistory()\n    useEffect(() => {\n        async function fetchData() {\n            const questions = await getQuestions()\n            questionsReceived(questions)\n        }\n        if (questions === null) {\n            fetchData()\n        }\n    })\n    if (!questions) {\n        return (\n            <div className=\"text-center mt-4\">\n                <Spinner animation=\"border\"/>\n            </div>\n        )\n    }\n    question = question || questions[questionId]\n    if (!question) {\n        return <PageNotFound message=\"Question not found\"/>\n    }\n    const myAnswer = authedUser && authedUser.answers && authedUser.answers[question.id]\n    const answered = myAnswer != null\n    const totalVotes = question.optionOne.votes.length + question.optionTwo.votes.length\n    const formatVotes = (nVotes) => {\n        switch (nVotes) {\n            case 0: return 'no votes'\n            case 1: return '1 vote'\n            default: return `${nVotes} votes`\n        }\n    }\n    const sendAnswerQuestion = async (selectedAnswer) => {\n        const answer = {\n            qid: question.id,\n            answer: selectedAnswer,\n            authedUser: authedUser.id,\n        }\n        answerQuestion(answer)\n        await saveQuestionAnswer(answer)\n    }\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title>\n                    Would you rather...\n                    {questionId == null && (\n                        <Button className=\"ml-2\" variant=\"secondary\" size=\"sm\" onClick={(e) => {\n                            e.preventDefault()\n                            history.push(`/questions/${question.id}`)\n                        }}>\n                            Details\n                        </Button>\n                    )}\n                </Card.Title>\n                <Container className=\"mw-100 p-0\">\n                    <Row>\n                        <Col sm={8}>\n                            <Button disabled={answered} onClick={() => sendAnswerQuestion('optionOne')}>\n                                {question.optionOne.text}\n                            </Button>\n                            {(answered && showTotalVotes) && <span className=\"ml-3\">{Math.round((question.optionOne.votes.length / totalVotes) * 100)}% ({formatVotes(question.optionOne.votes.length)})</span>}\n                            {myAnswer && myAnswer === 'optionOne' && <Badge variant=\"secondary\" className=\"ml-2\">my vote</Badge>}\n                            <Card.Text className=\"mt-3\">OR</Card.Text>\n                            <Button disabled={answered} onClick={() => sendAnswerQuestion('optionTwo')}>\n                                {question.optionTwo.text}\n                            </Button>\n                            {(answered && showTotalVotes) && <span className=\"ml-3\">{Math.round((question.optionTwo.votes.length / totalVotes) * 100)}% ({formatVotes(question.optionTwo.votes.length)})</span>}\n                            {myAnswer && myAnswer === 'optionTwo' && <Badge variant=\"secondary\" className=\"ml-2\">my vote</Badge>}\n                        </Col>\n                    </Row>\n                </Container>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default connect(mapStateToProps, { answerQuestion, questionsReceived })(Question)","import React, { useEffect } from 'react'\nimport { getQuestions }  from '../api'\nimport { questionsReceived } from '../actions/questions'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab, ListGroup, Spinner } from 'react-bootstrap'\nimport Question from './Question'\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n    return {\n        authedUser,\n        questions,\n    }\n}\n\nfunction Questions({authedUser, questions, questionsReceived}) {\n    useEffect(() => {\n        async function fetchData() {\n            const questions = await getQuestions()\n            questionsReceived(questions)\n        }\n        if (questions === null) {\n            fetchData()\n        }\n    })\n    if (questions == null) {\n        return (\n            <div className=\"text-center mt-4\">\n                <Spinner animation=\"border\"/>\n            </div>\n        )\n    }\n    const questionsArray = Object.keys(questions).map(questionId => questions[questionId]).sort((question1, question2) => question2.timestamp - question1.timestamp)\n    const filterQuestions = (question) => {\n        if (!authedUser) {\n            return false\n        }\n        return Object.keys(authedUser.answers).includes(question.id)\n    }\n    const unanswerQuestions = questionsArray.filter((question) => !filterQuestions(question))\n    const answeredQuestions = questionsArray.filter((question) => filterQuestions(question))\n    return (\n        <Tabs defaultActiveKey=\"unanswer\">\n            <Tab eventKey=\"unanswer\" title={`Unanswer Questions (${unanswerQuestions.length})`}>\n                <ListGroup variant=\"flush\">\n                    {unanswerQuestions.map(question => (\n                        <ListGroup.Item key={question.id}>\n                            <Question question={question}/>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Tab>\n            <Tab eventKey=\"answered\" title={`Answered Questions (${answeredQuestions.length})`}>\n                <ListGroup variant=\"flush\">\n                    {answeredQuestions.map(question => (\n                        <ListGroup.Item key={question.id}>\n                            <Question question={question} showTotalVotes={false}/>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Tab>\n        </Tabs>\n    )\n}\n\nexport default connect(mapStateToProps, { questionsReceived })(Questions)","import React, { useEffect, Fragment } from 'react'\nimport { getUsers }  from '../api'\nimport { ListGroup, Spinner, Figure } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { usersReceived } from '../actions/users'\n\nconst mapStateToProps = ({ users }) => {\n    return {\n        users\n    }\n}\n\nfunction UserProfile({ user }) {\n    const questions = user.questions.length\n    const answers = Object.keys(user.answers).length\n    const totalVotes = questions + answers\n    return (\n        <Fragment>\n            <Figure.Image width={50} height={50} src={user.avatarURL} roundedCircle thumbnail className=\"mr-2\"/>\n            {user.name} ({user.id})\n            <br/>\n            Total Votes: {totalVotes}\n            <br/>\n            Questions: {questions}\n            <br/>\n            Answers: {answers}\n        </Fragment>\n    )\n}\n\nfunction Leaderboard({ users, usersReceived }) {\n    useEffect(() => {\n        async function fetchData() {\n            const questions = await getUsers()\n            usersReceived(questions)\n        }\n        if (users === null) {\n            fetchData()\n        }\n    })\n    if (users == null) {\n        return (\n            <div className=\"text-center mt-4\">\n                <Spinner animation=\"border\"/>\n            </div>\n        )\n    }\n    const usersArray = Object.keys(users).map(userId => users[userId])\n        .sort((user1, user2) => {\n            return (Object.keys(user2.answers).length + user2.questions.length) - (Object.keys(user1.answers).length + user1.questions.length)\n        })\n    return (\n        <ListGroup variant=\"flush\">\n            {usersArray.map(user => (\n                <ListGroup.Item key={user.id}>\n                    <UserProfile user={user}/>\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    )\n}\n\nexport default connect(mapStateToProps, { usersReceived })(Leaderboard)","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport LoginDialog from './LoginDialog'\nimport { Navbar, Nav, Button, Figure } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { setAuthedUser } from '../actions/authedUser'\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom'\nimport NewQuestion from './NewQuestion'\nimport Questions from './Questions'\nimport Question from './Question'\nimport Leaderboard from './Leaderboard'\nimport PageNotFound from './PageNotFound'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n      authedUser\n    }\n}\n\nfunction App({ authedUser, setAuthedUser }) {\n  const location = useLocation()\n  const history = useHistory()\n  return (\n    <div>\n      {authedUser === null && <LoginDialog/>}\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect={true}>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\" activeKey={location.pathname}>\n            <Nav.Link onClick={() => {\n              if (history.location.pathname !== '/questions') history.push('/questions')\n            }}>\n              Questions\n            </Nav.Link>\n            <Nav.Link onClick={() => {\n              if (history.location.pathname !== '/add') history.push('/add')\n            }}>\n              New Question\n            </Nav.Link>\n            <Nav.Link onClick={() => {\n              if (history.location.pathname !== '/leaderboard') history.push('/leaderboard')\n            }}>\n              Leaderboard\n            </Nav.Link>\n          </Nav>\n          {authedUser && (\n            <Nav>\n              <Navbar.Text className=\"mr-2\">\n                {authedUser && `Signed in as: ${authedUser.name} (${authedUser.id})`}\n              </Navbar.Text>\n              <Figure.Image width={40} height={32} src={authedUser.avatarURL} roundedCircle thumbnail className=\"mr-2 mt-0 mb-0\"/>\n              <Button disabled={authedUser === null} onClick={() => setAuthedUser(null)}>Logout</Button>\n            </Nav>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/questions\" component={Questions}/>\n        <Route exact path=\"/questions/:id\" render={({ match }) => {\n          const { id } = match.params\n          return <Question questionId={id} showVotes={true} disableVoteAction={true} showTotalVotes={true} showAuthor={true}/>\n        }}/>\n        <Route exact path=\"/add\" component={NewQuestion}/>\n        <Route exact path=\"/leaderboard\" component={Leaderboard}/>\n        <Route component={PageNotFound}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, { setAuthedUser })(App)\n","import { combineReducers } from 'redux'\nimport authedUser from './authedUser'\nimport questions from './questions'\nimport users from './users'\n\nexport default combineReducers({\n    authedUser,\n    questions,\n    users,\n})\n","import { SET_AUTHED_USER } from '../actions/authedUser'\nimport { ADD_QUESTION, ANSWER_QUESTION } from '../actions/questions'\n\nconst LOCAL_STORAGE_AUTHED_USER_KEY = 'authedUser'\n\nexport default function authedUser(state = JSON.parse(localStorage.getItem(LOCAL_STORAGE_AUTHED_USER_KEY)), action) {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            const user = action.user\n            if (user) {\n                localStorage.setItem(LOCAL_STORAGE_AUTHED_USER_KEY, JSON.stringify(user))\n            } else {\n                localStorage.removeItem(LOCAL_STORAGE_AUTHED_USER_KEY)\n            }\n            return user\n        case ADD_QUESTION:\n            return {\n                ...state,\n                questions: state.questions.concat([\n                    action.question.id\n                ])\n            }\n        case ANSWER_QUESTION:\n            return {\n                ...state,\n                answers: {\n                    ...state.answers,\n                    [action.qid]: action.answer\n                }\n            }\n        default:\n            return state\n    }\n}","import { ADD_QUESTION, QUESTIONS_RECEIVED, ANSWER_QUESTION } from '../actions/questions'\n\nconst LOCAL_STORAGE_QUESTIONS_KEY = 'questions'\n\nexport default function questions(state = JSON.parse(localStorage.getItem(LOCAL_STORAGE_QUESTIONS_KEY)), action) {\n    switch (action.type) {\n        case QUESTIONS_RECEIVED: {\n            const questions = {\n                ...state,\n                ...action.questions\n            }\n            localStorage.setItem(LOCAL_STORAGE_QUESTIONS_KEY, JSON.stringify(questions))\n            return questions\n        }\n        case ADD_QUESTION: {\n            const questions = {\n                ...state,\n                [action.question.id]: action.question\n            }\n            localStorage.setItem(LOCAL_STORAGE_QUESTIONS_KEY, JSON.stringify(questions))\n            return questions\n        }\n        case ANSWER_QUESTION: {\n            const questions = {\n                ...state,\n                [action.qid]: {\n                    ...state[action.qid],\n                    [action.answer]: {\n                        ...state[action.qid][action.answer],\n                        votes: state[action.qid][action.answer].votes.concat(action.authedUser)\n                    }\n                }\n            }\n            localStorage.setItem(LOCAL_STORAGE_QUESTIONS_KEY, JSON.stringify(questions))\n            return questions\n        }\n        default:\n            return state\n    }\n}","import { USERS_RECEIVED } from '../actions/users'\n\nconst LOCAL_STORAGE_USERS_KEY = 'users'\n\nexport default function authedUser(state = JSON.parse(localStorage.getItem(LOCAL_STORAGE_USERS_KEY)), action) {\n    switch (action.type) {\n        case USERS_RECEIVED:\n            const users = action.users\n            localStorage.setItem(LOCAL_STORAGE_USERS_KEY, JSON.stringify(users))\n            return users\n        default:\n            return state\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport { HashRouter } from 'react-router-dom'\nimport thunk from 'redux-thunk';\n\nconst logger = (store) => (next) => (action) => {\n    console.group(action.type)\n        console.log('Action:', action)\n        const result = next(action)\n        console.log('New State:', store.getState())\n    console.groupEnd()\n    return result\n}\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <Provider store={store}>\n            <App />        \n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}
{"version":3,"sources":["api/_DATA.js","api/index.js","actions/authedUser.js","components/LoginDialog.js","components/NewQuestion.js","actions/questions.js","components/Question.js","components/Questions.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/questions.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","_saveQuestionAnswer","qid","answer","saveQuestion","a","async","saveQuestionAnswer","setAuthedUser","user","type","connect","show","useState","setUsers","selectedUser","setSelectedUser","useEffect","fetchData","Modal","Header","Title","Body","className","Spinner","animation","ListGroup","Object","keys","map","userId","Item","key","eventKey","active","onClick","Figure","Image","width","height","src","roundedCircle","thumbnail","Button","disabled","addQuestion","lastOption1","lastOption2","setLastOptions","option1","setOption1","option2","setOption2","displayToast","setDisplayToast","setOption","e","setOptionState","preventDefault","target","value","Container","Row","Col","xs","Card","Form","Group","Text","Control","placeholder","onChange","trim","length","questionToBeSaved","questionSaved","sendQuestion","Toast","style","position","top","left","transform","onClose","answerQuestion","authedUserId","myAnswer","answered","formatVotes","nVotes","sendAnswerQuestion","selectedAnswer","Badge","variant","questionsReceived","questionsArray","questionId","filterQuestions","includes","unanswerQuestions","filter","answeredQuestions","Tabs","defaultActiveKey","Tab","title","historyLocation","useHistory","location","Navbar","bg","expand","collapseOnSelect","Toggle","aria-controls","Collapse","Nav","activeKey","pathname","Link","href","exact","path","component","Questions","NewQuestion","to","combineReducers","state","action","store","createStore","rootReducer","applyMiddleware","thunk","next","console","group","log","result","getState","groupEnd","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb5eb76e.chunk.js","sourcesContent":["let users = {\n    sarahedo: {\n      id: 'sarahedo',\n      name: 'Sarah Edo',\n      avatarURL: 'https://pbs.twimg.com/profile_images/2958377871/1badc51c9ffa183c28ecefec1bc8a1a5_400x400.jpeg',\n      answers: {\n        \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\n        \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n        \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n      },\n      questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n      id: 'tylermcginnis',\n      name: 'Tyler McGinnis',\n      avatarURL: 'https://pbs.twimg.com/profile_images/1138547910524588034/4R6jdBch_400x400.png',\n      answers: {\n        \"vthrdm985a262al8qx3do\": 'optionOne',\n        \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n      },\n      questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n      id: 'johndoe',\n      name: 'John Doe',\n      avatarURL: 'https://pbs.twimg.com/profile_images/582222032739266561/GVZk2caU_400x400.jpg',\n      answers: {\n        \"xj352vofupe1dqz9emx13r\": 'optionOne',\n        \"vthrdm985a262al8qx3do\": 'optionTwo',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\n      },\n      questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n  }\n  \n  let questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n      id: '8xf0y6ziyjabvozdd253nd',\n      author: 'sarahedo',\n      timestamp: 1467166872634,\n      optionOne: {\n        votes: ['sarahedo'],\n        text: 'have horrible short term memory',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'have horrible long term memory'\n      }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n      id: '6ni6ok3ym7mf1p33lnez',\n      author: 'johndoe',\n      timestamp: 1468479767190,\n      optionOne: {\n        votes: ['johndoe', 'sarahedo'],\n        text: 'become a superhero',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'become a supervillian'\n      }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n      id: 'am8ehyc8byjqgar0jgpub9',\n      author: 'sarahedo',\n      timestamp: 1488579767190,\n      optionOne: {\n        votes: [],\n        text: 'be telekinetic',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be telepathic'\n      }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n      id: 'loxhs1bqm25b708cmbf3g',\n      author: 'tylermcginnis',\n      timestamp: 1482579767190,\n      optionOne: {\n        votes: [],\n        text: 'be a front-end developer',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be a back-end developer'\n      }\n    },\n    \"vthrdm985a262al8qx3do\": {\n      id: 'vthrdm985a262al8qx3do',\n      author: 'tylermcginnis',\n      timestamp: 1489579767190,\n      optionOne: {\n        votes: ['tylermcginnis'],\n        text: 'find $50 yourself',\n      },\n      optionTwo: {\n        votes: ['johndoe'],\n        text: 'have your best friend find $500'\n      }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n      id: 'xj352vofupe1dqz9emx13r',\n      author: 'johndoe',\n      timestamp: 1493579767190,\n      optionOne: {\n        votes: ['johndoe'],\n        text: 'write JavaScript',\n      },\n      optionTwo: {\n        votes: ['tylermcginnis'],\n        text: 'write Swift'\n      }\n    },\n  }\n  \n  function generateUID () {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n  }\n  \n  export function _getUsers () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...users}), 1000)\n    })\n  }\n  \n  export function _getQuestions () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...questions}), 1000)\n    })\n  }\n  \n  function formatQuestion ({ optionOneText, optionTwoText, author }) {\n    return {\n      id: generateUID(),\n      timestamp: Date.now(),\n      author,\n      optionOne: {\n        votes: [],\n        text: optionOneText,\n      },\n      optionTwo: {\n        votes: [],\n        text: optionTwoText,\n      }\n    }\n  }\n  \n  export function _saveQuestion (question) {\n    return new Promise((res, rej) => {\n      const authedUser = question.author;\n      const formattedQuestion = formatQuestion(question)\n  \n      setTimeout(() => {\n        questions = {\n          ...questions,\n          [formattedQuestion.id]: formattedQuestion\n        }\n        \n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            questions: users[authedUser].questions.concat([formattedQuestion.id])\n          }\n        }\n  \n        res(formattedQuestion)\n      }, 1000)\n    })\n  }\n  \n  export function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            answers: {\n              ...users[authedUser].answers,\n              [qid]: answer\n            }\n          }\n        }\n  \n        questions = {\n          ...questions,\n          [qid]: {\n            ...questions[qid],\n            [answer]: {\n              ...questions[qid][answer],\n              votes: questions[qid][answer].votes.concat([authedUser])\n            }\n          }\n        }\n  \n        res()\n      }, 500)\n    })\n  }\n  \n  ","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA'\n\nexport async function getUsers() {\n    return await _getUsers()\n}\n\nexport async function getQuestions() {\n    return await _getQuestions()\n}\n\nexport async function saveQuestion(question) {\n    return await _saveQuestion(question)\n}\n\nexport async function saveQuestionAnswer(answer) {\n    return await _saveQuestionAnswer(answer)\n}\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport function setAuthedUser(user) {\n    return {\n        type: SET_AUTHED_USER,\n        user\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Modal, Button, Spinner, ListGroup, Figure } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getUsers } from '../api'\nimport { setAuthedUser } from '../actions/authedUser'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nfunction LoginDialog({ authedUser, setAuthedUser }) {\n    \n    const show = authedUser === null\n    const [users, setUsers] = useState(null)\n    const [selectedUser, setSelectedUser] = useState(null)\n\n    useEffect(() => {\n        async function fetchData() {\n            const users = await getUsers()\n            setUsers(users)\n        }\n        if (!users) {\n            fetchData()\n        }\n    })\n\n    return (\n        <Modal show={show}>\n            <Modal.Header>\n                <Modal.Title>Select a user to login</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {!users && (\n                    <div className=\"text-center mb-1\">\n                        <Spinner animation=\"border\"/>\n                    </div>\n                )}\n                {users && (\n                    <ListGroup className=\"mb-3 w-100\">\n                        {Object.keys(users).map(userId => users[userId]).map(user => (\n                            <ListGroup.Item key={user.id} eventKey={user.id} active={selectedUser && selectedUser.id === user.id} onClick={() => setSelectedUser(user)}>\n                                <Figure.Image width={50} height={50} src={user.avatarURL} roundedCircle thumbnail className=\"mr-2\"/>\n                                {`${user.name} (${user.id})`}\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n                <Button className=\"w-100\" onClick={() => setAuthedUser(selectedUser)} disabled={selectedUser === null}>Login</Button>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default connect(mapStateToProps, { setAuthedUser })(LoginDialog)","import React, { useState } from 'react'\nimport { Container, Row, Col, Card, Button, Form, Toast } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { saveQuestion } from '../api'\nimport { addQuestion } from '../actions/questions'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nfunction NewQuestion({ authedUser, addQuestion }) {\n    const [{lastOption1, lastOption2}, setLastOptions] = useState({})\n    const [option1, setOption1] = useState(\"\")\n    const [option2, setOption2] = useState(\"\")\n    const [displayToast, setDisplayToast] = useState(false)\n\n    const sendQuestion = async () => {\n        const questionToBeSaved = {\n            optionOneText: option1.trim(),\n            optionTwoText: option2.trim(),\n            author: authedUser.id\n        }\n        setOption1(\"\")\n        setOption2(\"\")\n        const questionSaved = await saveQuestion(questionToBeSaved)\n        addQuestion(questionSaved)\n        setLastOptions({\n            lastOption1: questionSaved.optionOne.text,\n            lastOption2: questionSaved.optionTwo.text,\n        })\n        setDisplayToast(true)\n        setTimeout(() => setDisplayToast(false), 1500)\n    }\n\n    const setOption = (e, setOptionState) => {\n        e.preventDefault()\n        setOptionState(e.target.value)\n    }\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                    </Col>\n                    <Col xs={10}>\n                        <Card className=\"text-center\">\n                            <Card.Header>\n                                <Card.Title>Create New Question</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Text>Would you rather...</Form.Text>\n                                        <Form.Control type=\"text\" placeholder=\"Type 1st option here\" value={option1} onChange={(e) => setOption(e, setOption1)}/>\n                                        <Form.Text>OR</Form.Text>\n                                        <Form.Control type=\"text\" placeholder=\"Type 2nd option here\" value={option2} onChange={(e) => setOption(e, setOption2)}/>\n                                    </Form.Group>\n                                    <Button disabled={option1.trim().length === 0 || option2.trim().length === 0} onClick={() => sendQuestion()} className=\"w-100\">Submit</Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                    </Col>\n                </Row>\n            </Container>\n            <Toast show={displayToast} style={{\n                position: 'absolute',\n                top: 0,\n                left: '50%',\n                transform: 'translateX(-50%)'\n            }} onClose={() => setDisplayToast(false)}>\n                <Toast.Header>\n                    <strong className=\"mr-auto\">Would you rather...</strong>\n                    <small className=\"ml-4\">just added</small>\n                </Toast.Header>\n                <Toast.Body className=\"text-center\">\n                    <p>{lastOption1}</p>\n                    <p>OR</p>\n                    <p>{lastOption2}</p>\n                </Toast.Body>\n            </Toast>\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, { addQuestion })(NewQuestion)\n","export const ADD_QUESTION = 'ADD_QUESTION'\nexport const QUESTIONS_RECEIVED = 'QUESTIONS_RECEIVED'\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\n\nexport function questionsReceived(questions) {\n    return {\n        type: QUESTIONS_RECEIVED,\n        questions\n    }\n}\n\nexport function addQuestion(question) {\n    return {\n        type: ADD_QUESTION,\n        question\n    }\n}\n\nexport function answerQuestion({ qid, answer, authedUserId }) {\n    return {\n        type: ANSWER_QUESTION,\n        qid,\n        answer,\n        authedUserId,\n    }\n}\n","import React from 'react'\nimport { Card, Button, Badge } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { saveQuestionAnswer } from '../api'\nimport { answerQuestion } from '../actions/questions'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nfunction Question({ question, authedUser, answerQuestion }) {\n    const myAnswer = authedUser && authedUser.answers && authedUser.answers[question.id]\n    const answered = myAnswer != null\n    const formatVotes = (nVotes) => {\n        switch (nVotes) {\n            case 0: return 'no votes'\n            case 1: return '1 vote'\n            default: return `${nVotes} votes`\n        }\n    }\n    const sendAnswerQuestion = async (selectedAnswer) => {\n        const answer = {\n            qid: question.id,\n            answer: selectedAnswer,\n            authedUser: authedUser.id,\n        }\n        answerQuestion(answer)\n        await saveQuestionAnswer(answer)\n    }\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title>Would you rather...</Card.Title>\n                <Button disabled={answered} onClick={() => sendAnswerQuestion('optionOne')}>\n                    {question.optionOne.text}\n                </Button>\n                {answered && <span className=\"ml-3\">{formatVotes(question.optionOne.votes.length)}</span>}\n                {myAnswer && myAnswer === 'optionOne' && <Badge variant=\"secondary\" className=\"ml-2\">my vote</Badge>}\n                <Card.Text className=\"mt-3\">OR</Card.Text>\n                <Button disabled={answered} onClick={() => sendAnswerQuestion('optionTwo')}>\n                    {question.optionTwo.text}\n                </Button>\n                {answered && <span className=\"ml-3\">{formatVotes(question.optionTwo.votes.length)}</span>}\n                {myAnswer && myAnswer === 'optionTwo' && <Badge variant=\"secondary\" className=\"ml-2\">my vote</Badge>}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default connect(mapStateToProps, { answerQuestion })(Question)","import React, { useEffect } from 'react'\nimport { getQuestions }  from '../api'\nimport { questionsReceived } from '../actions/questions'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab, ListGroup, Spinner } from 'react-bootstrap'\nimport Question from './Question'\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n    return {\n        authedUser,\n        questions,\n    }\n}\n\nfunction Questions({authedUser, questions, questionsReceived}) {\n    useEffect(() => {\n        async function fetchData() {\n            const questions = await getQuestions()\n            questionsReceived(questions)\n        }\n        if (questions === null) {\n            fetchData()\n        }\n    })\n    if (questions == null) {\n        return (\n            <div className=\"text-center mt-4\">\n                <Spinner animation=\"border\"/>\n            </div>\n        )\n    }\n    const questionsArray = Object.keys(questions).map(questionId => questions[questionId])\n    const filterQuestions = (question) => {\n        if (!authedUser) {\n            return false\n        }\n        return Object.keys(authedUser.answers).includes(question.id)\n    }\n    const unanswerQuestions = questionsArray.filter((question) => !filterQuestions(question))\n    const answeredQuestions = questionsArray.filter((question) => filterQuestions(question))\n    return (\n        <Tabs defaultActiveKey=\"unanswer\">\n            <Tab eventKey=\"unanswer\" title={`Unanswer Questions (${unanswerQuestions.length})`}>\n                <ListGroup variant=\"flush\">\n                    {unanswerQuestions.map(question => (\n                        <ListGroup.Item key={question.id}>\n                            <Question question={question}/>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Tab>\n            <Tab eventKey=\"answered\" title={`Answered Questions (${answeredQuestions.length})`}>\n                <ListGroup variant=\"flush\">\n                    {answeredQuestions.map(question => (\n                        <ListGroup.Item key={question.id}>\n                            <Question question={question}/>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Tab>\n        </Tabs>\n    )\n}\n\nexport default connect(mapStateToProps, { questionsReceived })(Questions)","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport LoginDialog from './LoginDialog'\nimport { Navbar, Nav, Button, Figure } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { setAuthedUser } from '../actions/authedUser'\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom'\nimport NewQuestion from './NewQuestion'\nimport Questions  from './Questions'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n      authedUser\n    }\n}\n\nfunction App({ authedUser, setAuthedUser }) {\n  const historyLocation = useHistory().location\n  return (\n    <div>\n      {authedUser === null && <LoginDialog/>}\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect={true}>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\" activeKey={historyLocation.pathname === '/questions' ? '/#questions' : '/#new-question'}>\n            <Nav.Link href=\"/#questions\">Questions</Nav.Link>\n            <Nav.Link href=\"/#new-question\">New Question</Nav.Link>\n          </Nav>\n          {authedUser && (\n            <Nav>\n              <Navbar.Text className=\"mr-2\">\n                {authedUser && `Signed in as: ${authedUser.name} (${authedUser.id})`}\n              </Navbar.Text>\n              <Figure.Image width={40} height={32} src={authedUser.avatarURL} roundedCircle thumbnail className=\"mr-2 mt-0 mb-0\"/>\n              <Button disabled={authedUser === null} onClick={() => setAuthedUser(null)}>Logout</Button>\n            </Nav>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/questions\" component={Questions}/>\n        <Route exact path=\"/new-question\" component={NewQuestion}/>\n        <Route>\n          <Redirect to=\"/questions\"/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, { setAuthedUser })(App)\n","import { combineReducers } from 'redux'\nimport authedUser from './authedUser'\nimport questions from './questions'\n\nexport default combineReducers({\n    authedUser,\n    questions,\n})\n","import { SET_AUTHED_USER } from '../actions/authedUser'\nimport { ADD_QUESTION, ANSWER_QUESTION } from '../actions/questions'\n\nexport default function authedUser(state = null, action) {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            return action.user\n        case ADD_QUESTION:\n            return {\n                ...state,\n                questions: state.questions.concat([\n                    action.question.id\n                ])\n            }\n        case ANSWER_QUESTION:\n            return {\n                ...state,\n                answers: {\n                    ...state.answers,\n                    [action.qid]: action.answer\n                }\n            }\n        default:\n            return state\n    }\n}","import { ADD_QUESTION, QUESTIONS_RECEIVED, ANSWER_QUESTION } from '../actions/questions'\n\nexport default function questions(state = null, action) {\n    switch (action.type) {\n        case QUESTIONS_RECEIVED:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION:\n            return {\n                ...state,\n                [action.question.id]: action.question\n            }\n        case ANSWER_QUESTION:\n            return {\n                ...state,\n                [action.qid]: {\n                    ...state[action.qid],\n                    [action.answer]: {\n                        ...state[action.qid][action.answer],\n                        votes: state[action.qid][action.answer].votes.concat(action.authedUser)\n                    }\n                }\n            }\n        default:\n            return state\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport { HashRouter } from 'react-router-dom'\nimport thunk from 'redux-thunk';\n\nconst logger = (store) => (next) => (action) => {\n    console.group(action.type)\n        console.log('Action:', action)\n        const result = next(action)\n        console.log('New State:', store.getState())\n    console.groupEnd()\n    return result\n}\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />        \n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}
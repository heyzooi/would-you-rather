{"version":3,"sources":["api/_DATA.js","api/index.js","actions/authedUser.js","components/LoginDialog.js","actions/questions.js","components/NewQuestion.js","components/PageNotFound.js","components/Question.js","components/Questions.js","components/Leaderboard.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/questions.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","_saveQuestionAnswer","qid","answer","getQuestions","a","async","saveQuestion","saveQuestionAnswer","setAuthedUser","user","type","connect","show","useState","setUsers","selectedUser","setSelectedUser","useEffect","fetchData","Modal","onHide","Header","Title","Body","className","Spinner","animation","ListGroup","Object","keys","map","userId","Item","key","eventKey","active","onClick","Figure","Image","width","height","src","roundedCircle","thumbnail","Button","disabled","questionsReceived","addQuestion","lastOption1","lastOption2","setLastOptions","option1","setOption1","option2","setOption2","displayToast","setDisplayToast","timerToken","clearTimeout","setOption","e","setOptionState","preventDefault","target","value","Container","Row","Col","xs","Card","Form","Group","Text","Control","placeholder","onChange","trim","length","questionToBeSaved","questionSaved","sendQuestion","Toast","style","position","top","left","transform","onClose","PageNotFound","message","answerQuestion","authedUserId","questionId","showVotes","disableVoteAction","showTotalVotes","myAnswer","answered","formatVotes","nVotes","sendAnswerQuestion","selectedAnswer","href","sm","Badge","variant","questionsArray","sort","question1","question2","filterQuestions","includes","unanswerQuestions","filter","answeredQuestions","Tabs","defaultActiveKey","Tab","title","location","useLocation","Navbar","bg","expand","collapseOnSelect","Toggle","aria-controls","Collapse","Nav","activeKey","pathname","replace","Link","exact","path","component","Questions","render","match","params","NewQuestion","Leaderboard","combineReducers","state","JSON","parse","localStorage","getItem","action","setItem","stringify","removeItem","store","createStore","rootReducer","applyMiddleware","thunk","next","console","group","log","result","getState","groupEnd","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.670778b8.chunk.js","sourcesContent":["let users = {\n    sarahedo: {\n      id: 'sarahedo',\n      name: 'Sarah Edo',\n      avatarURL: 'https://pbs.twimg.com/profile_images/2958377871/1badc51c9ffa183c28ecefec1bc8a1a5_400x400.jpeg',\n      answers: {\n        \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\n        \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n        \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n      },\n      questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n      id: 'tylermcginnis',\n      name: 'Tyler McGinnis',\n      avatarURL: 'https://pbs.twimg.com/profile_images/1138547910524588034/4R6jdBch_400x400.png',\n      answers: {\n        \"vthrdm985a262al8qx3do\": 'optionOne',\n        \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n      },\n      questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n      id: 'johndoe',\n      name: 'John Doe',\n      avatarURL: 'https://pbs.twimg.com/profile_images/582222032739266561/GVZk2caU_400x400.jpg',\n      answers: {\n        \"xj352vofupe1dqz9emx13r\": 'optionOne',\n        \"vthrdm985a262al8qx3do\": 'optionTwo',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\n      },\n      questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n  }\n  \n  let questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n      id: '8xf0y6ziyjabvozdd253nd',\n      author: 'sarahedo',\n      timestamp: 1467166872634,\n      optionOne: {\n        votes: ['sarahedo'],\n        text: 'have horrible short term memory',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'have horrible long term memory'\n      }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n      id: '6ni6ok3ym7mf1p33lnez',\n      author: 'johndoe',\n      timestamp: 1468479767190,\n      optionOne: {\n        votes: ['johndoe', 'sarahedo'],\n        text: 'become a superhero',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'become a supervillian'\n      }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n      id: 'am8ehyc8byjqgar0jgpub9',\n      author: 'sarahedo',\n      timestamp: 1488579767190,\n      optionOne: {\n        votes: [],\n        text: 'be telekinetic',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be telepathic'\n      }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n      id: 'loxhs1bqm25b708cmbf3g',\n      author: 'tylermcginnis',\n      timestamp: 1482579767190,\n      optionOne: {\n        votes: [],\n        text: 'be a front-end developer',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be a back-end developer'\n      }\n    },\n    \"vthrdm985a262al8qx3do\": {\n      id: 'vthrdm985a262al8qx3do',\n      author: 'tylermcginnis',\n      timestamp: 1489579767190,\n      optionOne: {\n        votes: ['tylermcginnis'],\n        text: 'find $50 yourself',\n      },\n      optionTwo: {\n        votes: ['johndoe'],\n        text: 'have your best friend find $500'\n      }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n      id: 'xj352vofupe1dqz9emx13r',\n      author: 'johndoe',\n      timestamp: 1493579767190,\n      optionOne: {\n        votes: ['johndoe'],\n        text: 'write JavaScript',\n      },\n      optionTwo: {\n        votes: ['tylermcginnis'],\n        text: 'write Swift'\n      }\n    },\n  }\n  \n  function generateUID () {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n  }\n  \n  export function _getUsers () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...users}), 1000)\n    })\n  }\n  \n  export function _getQuestions () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...questions}), 1000)\n    })\n  }\n  \n  function formatQuestion ({ optionOneText, optionTwoText, author }) {\n    return {\n      id: generateUID(),\n      timestamp: Date.now(),\n      author,\n      optionOne: {\n        votes: [],\n        text: optionOneText,\n      },\n      optionTwo: {\n        votes: [],\n        text: optionTwoText,\n      }\n    }\n  }\n  \n  export function _saveQuestion (question) {\n    return new Promise((res, rej) => {\n      const authedUser = question.author;\n      const formattedQuestion = formatQuestion(question)\n  \n      setTimeout(() => {\n        questions = {\n          ...questions,\n          [formattedQuestion.id]: formattedQuestion\n        }\n        \n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            questions: users[authedUser].questions.concat([formattedQuestion.id])\n          }\n        }\n  \n        res(formattedQuestion)\n      }, 1000)\n    })\n  }\n  \n  export function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            answers: {\n              ...users[authedUser].answers,\n              [qid]: answer\n            }\n          }\n        }\n  \n        questions = {\n          ...questions,\n          [qid]: {\n            ...questions[qid],\n            [answer]: {\n              ...questions[qid][answer],\n              votes: questions[qid][answer].votes.concat([authedUser])\n            }\n          }\n        }\n  \n        res()\n      }, 500)\n    })\n  }\n  \n  ","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA'\n\nexport async function getUsers() {\n    return await _getUsers()\n}\n\nexport async function getQuestions() {\n    return await _getQuestions()\n}\n\nexport async function saveQuestion(question) {\n    return await _saveQuestion(question)\n}\n\nexport async function saveQuestionAnswer(answer) {\n    return await _saveQuestionAnswer(answer)\n}\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\nexport function setAuthedUser(user) {\n    return {\n        type: SET_AUTHED_USER,\n        user\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Modal, Button, Spinner, ListGroup, Figure } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getUsers } from '../api'\nimport { setAuthedUser } from '../actions/authedUser'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nfunction LoginDialog({ authedUser, setAuthedUser }) {\n    \n    const show = authedUser === null\n    const [users, setUsers] = useState(null)\n    const [selectedUser, setSelectedUser] = useState(null)\n\n    useEffect(() => {\n        async function fetchData() {\n            const users = await getUsers()\n            setUsers(users)\n        }\n        if (!users) {\n            fetchData()\n        }\n    })\n\n    return (\n        <Modal show={show} onHide={() => {}}>\n            <Modal.Header>\n                <Modal.Title>Select a user to login</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {!users && (\n                    <div className=\"text-center mb-1\">\n                        <Spinner animation=\"border\"/>\n                    </div>\n                )}\n                {users && (\n                    <ListGroup className=\"mb-3 w-100\">\n                        {Object.keys(users).map(userId => users[userId]).map(user => (\n                            <ListGroup.Item key={user.id} eventKey={user.id} active={selectedUser && selectedUser.id === user.id} onClick={() => setSelectedUser(user)}>\n                                <Figure.Image width={50} height={50} src={user.avatarURL} roundedCircle thumbnail className=\"mr-2\"/>\n                                {`${user.name} (${user.id})`}\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n                <Button className=\"w-100\" onClick={() => setAuthedUser(selectedUser)} disabled={selectedUser === null}>Login</Button>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default connect(mapStateToProps, { setAuthedUser })(LoginDialog)","export const ADD_QUESTION = 'ADD_QUESTION'\nexport const QUESTIONS_RECEIVED = 'QUESTIONS_RECEIVED'\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\n\nexport function questionsReceived(questions) {\n    return {\n        type: QUESTIONS_RECEIVED,\n        questions\n    }\n}\n\nexport function addQuestion(question) {\n    return {\n        type: ADD_QUESTION,\n        question\n    }\n}\n\nexport function answerQuestion({ qid, answer, authedUserId }) {\n    return {\n        type: ANSWER_QUESTION,\n        qid,\n        answer,\n        authedUserId,\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Card, Button, Form, Toast } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { saveQuestion } from '../api'\nimport { addQuestion } from '../actions/questions'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nfunction NewQuestion({ authedUser, addQuestion }) {\n    const [{lastOption1, lastOption2}, setLastOptions] = useState({})\n    const [option1, setOption1] = useState(\"\")\n    const [option2, setOption2] = useState(\"\")\n    const [displayToast, setDisplayToast] = useState(false)\n    let timerToken = null;\n    const sendQuestion = async () => {\n        const questionToBeSaved = {\n            optionOneText: option1.trim(),\n            optionTwoText: option2.trim(),\n            author: authedUser.id\n        }\n        setOption1(\"\")\n        setOption2(\"\")\n        const questionSaved = await saveQuestion(questionToBeSaved)\n        addQuestion(questionSaved)\n        setLastOptions({\n            lastOption1: questionSaved.optionOne.text,\n            lastOption2: questionSaved.optionTwo.text,\n        })\n        setDisplayToast(true)\n        timerToken = setTimeout(() => setDisplayToast(false), 1500)\n    }\n\n    useEffect(() => clearTimeout(timerToken))\n\n    const setOption = (e, setOptionState) => {\n        e.preventDefault()\n        setOptionState(e.target.value)\n    }\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                    </Col>\n                    <Col xs={10}>\n                        <Card className=\"text-center\">\n                            <Card.Header>\n                                <Card.Title>Create New Question</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Text>Would you rather...</Form.Text>\n                                        <Form.Control type=\"text\" placeholder=\"Type 1st option here\" value={option1} onChange={(e) => setOption(e, setOption1)}/>\n                                        <Form.Text>OR</Form.Text>\n                                        <Form.Control type=\"text\" placeholder=\"Type 2nd option here\" value={option2} onChange={(e) => setOption(e, setOption2)}/>\n                                    </Form.Group>\n                                    <Button disabled={option1.trim().length === 0 || option2.trim().length === 0} onClick={() => sendQuestion()} className=\"w-100\">Submit</Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                    </Col>\n                </Row>\n            </Container>\n            <Toast show={displayToast} style={{\n                position: 'absolute',\n                top: 0,\n                left: '50%',\n                transform: 'translateX(-50%)'\n            }} onClose={() => setDisplayToast(false)}>\n                <Toast.Header>\n                    <strong className=\"mr-auto\">Would you rather...</strong>\n                    <small className=\"ml-4\">just added</small>\n                </Toast.Header>\n                <Toast.Body className=\"text-center\">\n                    <p>{lastOption1}</p>\n                    <p>OR</p>\n                    <p>{lastOption2}</p>\n                </Toast.Body>\n            </Toast>\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, { addQuestion })(NewQuestion)\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nexport default function PageNotFound({ message }) {\n    return (\n        <Container className=\"text-center\">\n            <Row>\n                <Col>404</Col>\n            </Row>\n            <Row>\n                <Col>{message || 'Page not found'}</Col>\n            </Row>\n        </Container>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { Card, Button, Badge, Container, Row, Col, Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { saveQuestionAnswer, getQuestions } from '../api'\nimport { answerQuestion, questionsReceived } from '../actions/questions'\nimport PageNotFound from './PageNotFound'\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n    return {\n        authedUser,\n        questions,\n    }\n}\n\nfunction Question({ questions, questionsReceived, questionId, question, authedUser, answerQuestion, showVotes, disableVoteAction, showTotalVotes }) {\n    useEffect(() => {\n        async function fetchData() {\n            const questions = await getQuestions()\n            questionsReceived(questions)\n        }\n        if (questions === null) {\n            fetchData()\n        }\n    })\n    if (!questions) {\n        return (\n            <div className=\"text-center mt-4\">\n                <Spinner animation=\"border\"/>\n            </div>\n        )\n    }\n    question = question || questions[questionId]\n    if (!question) {\n        return <PageNotFound message=\"Question not found\"/>\n    }\n    showTotalVotes = showTotalVotes || questionId != null\n    const myAnswer = authedUser && authedUser.answers && authedUser.answers[question.id]\n    const answered = myAnswer != null\n    const formatVotes = (nVotes) => {\n        switch (nVotes) {\n            case 0: return 'no votes'\n            case 1: return '1 vote'\n            default: return `${nVotes} votes`\n        }\n    }\n    const sendAnswerQuestion = async (selectedAnswer) => {\n        const answer = {\n            qid: question.id,\n            answer: selectedAnswer,\n            authedUser: authedUser.id,\n        }\n        answerQuestion(answer)\n        await saveQuestionAnswer(answer)\n    }\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title>\n                    <a href={`/#questions/${question.id}`}>Would you rather...</a>\n                </Card.Title>\n                <Container className=\"mw-100 p-0\">\n                    <Row>\n                        <Col sm={8}>\n                            <Button disabled={disableVoteAction || answered} onClick={() => sendAnswerQuestion('optionOne')}>\n                                {question.optionOne.text}\n                            </Button>\n                            {(showVotes || answered) && <span className=\"ml-3\">{formatVotes(question.optionOne.votes.length)}</span>}\n                            {myAnswer && myAnswer === 'optionOne' && <Badge variant=\"secondary\" className=\"ml-2\">my vote</Badge>}\n                            <Card.Text className=\"mt-3\">OR</Card.Text>\n                            <Button disabled={disableVoteAction || answered} onClick={() => sendAnswerQuestion('optionTwo')}>\n                                {question.optionTwo.text}\n                            </Button>\n                            {(showVotes || answered) && <span className=\"ml-3\">{formatVotes(question.optionTwo.votes.length)}</span>}\n                            {myAnswer && myAnswer === 'optionTwo' && <Badge variant=\"secondary\" className=\"ml-2\">my vote</Badge>}\n                        </Col>\n                        {showTotalVotes && (\n                            <Col sm={4}>\n                                <h1>\n                                {(showVotes || answered) && formatVotes(question.optionOne.votes.length + question.optionTwo.votes.length)}\n                                </h1>\n                            </Col>\n                        )}\n                    </Row>\n                </Container>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default connect(mapStateToProps, { answerQuestion, questionsReceived })(Question)","import React, { useEffect } from 'react'\nimport { getQuestions }  from '../api'\nimport { questionsReceived } from '../actions/questions'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab, ListGroup, Spinner } from 'react-bootstrap'\nimport Question from './Question'\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n    return {\n        authedUser,\n        questions,\n    }\n}\n\nfunction Questions({authedUser, questions, questionsReceived}) {\n    useEffect(() => {\n        async function fetchData() {\n            const questions = await getQuestions()\n            questionsReceived(questions)\n        }\n        if (questions === null) {\n            fetchData()\n        }\n    })\n    if (questions == null) {\n        return (\n            <div className=\"text-center mt-4\">\n                <Spinner animation=\"border\"/>\n            </div>\n        )\n    }\n    const questionsArray = Object.keys(questions).map(questionId => questions[questionId]).sort((question1, question2) => question2.timestamp - question1.timestamp)\n    const filterQuestions = (question) => {\n        if (!authedUser) {\n            return false\n        }\n        return Object.keys(authedUser.answers).includes(question.id)\n    }\n    const unanswerQuestions = questionsArray.filter((question) => !filterQuestions(question))\n    const answeredQuestions = questionsArray.filter((question) => filterQuestions(question))\n    return (\n        <Tabs defaultActiveKey=\"unanswer\">\n            <Tab eventKey=\"unanswer\" title={`Unanswer Questions (${unanswerQuestions.length})`}>\n                <ListGroup variant=\"flush\">\n                    {unanswerQuestions.map(question => (\n                        <ListGroup.Item key={question.id}>\n                            <Question question={question}/>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Tab>\n            <Tab eventKey=\"answered\" title={`Answered Questions (${answeredQuestions.length})`}>\n                <ListGroup variant=\"flush\">\n                    {answeredQuestions.map(question => (\n                        <ListGroup.Item key={question.id}>\n                            <Question question={question} showTotalVotes={true}/>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Tab>\n        </Tabs>\n    )\n}\n\nexport default connect(mapStateToProps, { questionsReceived })(Questions)","import React, { useEffect } from 'react'\nimport { getQuestions }  from '../api'\nimport { ListGroup, Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { questionsReceived } from '../actions/questions'\nimport Question from './Question'\n\nconst mapStateToProps = ({ questions }) => {\n    return {\n        questions,\n    }\n}\n\nfunction Leaderboard({ questions, questionsReceived }) {\n    useEffect(() => {\n        async function fetchData() {\n            const questions = await getQuestions()\n            questionsReceived(questions)\n        }\n        if (questions === null) {\n            fetchData()\n        }\n    })\n    if (questions == null) {\n        return (\n            <div className=\"text-center mt-4\">\n                <Spinner animation=\"border\"/>\n            </div>\n        )\n    }\n    const questionsArray = Object.keys(questions).map(questionId => questions[questionId])\n        .sort((question1, question2) => question2.timestamp - question1.timestamp)\n        .sort((question1, question2) => (question2.optionOne.votes.length + question2.optionTwo.votes.length) - (question1.optionOne.votes.length + question1.optionTwo.votes.length))\n    return (\n        <ListGroup variant=\"flush\">\n            {questionsArray.map(question => (\n                <ListGroup.Item key={question.id}>\n                    <Question question={question} showVotes={true} disableVoteAction={true} showTotalVotes={true}/>\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    )\n}\n\nexport default connect(mapStateToProps, { questionsReceived })(Leaderboard)","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport LoginDialog from './LoginDialog'\nimport { Navbar, Nav, Button, Figure } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { setAuthedUser } from '../actions/authedUser'\nimport { Switch, Route, useLocation } from 'react-router-dom'\nimport NewQuestion from './NewQuestion'\nimport Questions from './Questions'\nimport Question from './Question'\nimport Leaderboard from './Leaderboard'\nimport PageNotFound from './PageNotFound'\n\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n      authedUser\n    }\n}\n\nfunction App({ authedUser, setAuthedUser }) {\n  const location = useLocation()\n  return (\n    <div>\n      {authedUser === null && <LoginDialog/>}\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect={true}>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\" activeKey={location.pathname.replace('/', '/#')}>\n            <Nav.Link href=\"/#questions\">Questions</Nav.Link>\n            <Nav.Link href=\"/#add\">New Question</Nav.Link>\n            <Nav.Link href=\"/#leaderboard\">Leaderboard</Nav.Link>\n          </Nav>\n          {authedUser && (\n            <Nav>\n              <Navbar.Text className=\"mr-2\">\n                {authedUser && `Signed in as: ${authedUser.name} (${authedUser.id})`}\n              </Navbar.Text>\n              <Figure.Image width={40} height={32} src={authedUser.avatarURL} roundedCircle thumbnail className=\"mr-2 mt-0 mb-0\"/>\n              <Button disabled={authedUser === null} onClick={() => setAuthedUser(null)}>Logout</Button>\n            </Nav>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/questions\" component={Questions}/>\n        <Route exact path=\"/questions/:id\" render={({ match }) => {\n          const { id } = match.params\n          return <Question questionId={id}/>\n        }}/>\n        <Route exact path=\"/add\" component={NewQuestion}/>\n        <Route exact path=\"/leaderboard\" component={Leaderboard}/>\n        <Route component={PageNotFound}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, { setAuthedUser })(App)\n","import { combineReducers } from 'redux'\nimport authedUser from './authedUser'\nimport questions from './questions'\n\nexport default combineReducers({\n    authedUser,\n    questions,\n})\n","import { SET_AUTHED_USER } from '../actions/authedUser'\nimport { ADD_QUESTION, ANSWER_QUESTION } from '../actions/questions'\n\nconst LOCAL_STORAGE_AUTHED_USER_KEY = 'authedUser'\n\nexport default function authedUser(state = JSON.parse(localStorage.getItem(LOCAL_STORAGE_AUTHED_USER_KEY)), action) {\n    switch (action.type) {\n        case SET_AUTHED_USER:\n            const user = action.user\n            if (user) {\n                localStorage.setItem(LOCAL_STORAGE_AUTHED_USER_KEY, JSON.stringify(user))\n            } else {\n                localStorage.removeItem(LOCAL_STORAGE_AUTHED_USER_KEY)\n            }\n            return user\n        case ADD_QUESTION:\n            return {\n                ...state,\n                questions: state.questions.concat([\n                    action.question.id\n                ])\n            }\n        case ANSWER_QUESTION:\n            return {\n                ...state,\n                answers: {\n                    ...state.answers,\n                    [action.qid]: action.answer\n                }\n            }\n        default:\n            return state\n    }\n}","import { ADD_QUESTION, QUESTIONS_RECEIVED, ANSWER_QUESTION } from '../actions/questions'\n\nconst LOCAL_STORAGE_QUESTIONS_KEY = 'questions'\n\nexport default function questions(state = JSON.parse(localStorage.getItem(LOCAL_STORAGE_QUESTIONS_KEY)), action) {\n    switch (action.type) {\n        case QUESTIONS_RECEIVED: {\n            const questions = {\n                ...state,\n                ...action.questions\n            }\n            localStorage.setItem(LOCAL_STORAGE_QUESTIONS_KEY, JSON.stringify(questions))\n            return questions\n        }\n        case ADD_QUESTION: {\n            const questions = {\n                ...state,\n                [action.question.id]: action.question\n            }\n            localStorage.setItem(LOCAL_STORAGE_QUESTIONS_KEY, JSON.stringify(questions))\n            return questions\n        }\n        case ANSWER_QUESTION: {\n            const questions = {\n                ...state,\n                [action.qid]: {\n                    ...state[action.qid],\n                    [action.answer]: {\n                        ...state[action.qid][action.answer],\n                        votes: state[action.qid][action.answer].votes.concat(action.authedUser)\n                    }\n                }\n            }\n            localStorage.setItem(LOCAL_STORAGE_QUESTIONS_KEY, JSON.stringify(questions))\n            return questions\n        }\n        default:\n            return state\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport { HashRouter } from 'react-router-dom'\nimport thunk from 'redux-thunk';\n\nconst logger = (store) => (next) => (action) => {\n    console.group(action.type)\n        console.log('Action:', action)\n        const result = next(action)\n        console.log('New State:', store.getState())\n    console.groupEnd()\n    return result\n}\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <Provider store={store}>\n            <App />        \n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}